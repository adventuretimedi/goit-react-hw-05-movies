{"version":3,"file":"static/js/881.bbf07b18.chunk.js","mappings":"kLACA,GAAgB,KAAO,wBAAwB,MAAQ,yBAAyB,KAAO,yB,kBCwCvF,EApCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGJ,EAAOK,KAAI,SAACC,EAAOC,GAClB,IAAMC,EACkB,OAAtBF,EAAMG,YAAN,yCACsCH,EAAMG,aACxC,GACN,OACE,eAAmBN,UAAWC,EAAAA,KAA9B,UACE,UAAC,KAAD,CACEM,GAAE,kBAAaJ,EAAMK,IACrBC,MAAO,CAAEC,KAAMZ,GACfE,UAAWC,EAAAA,KAHb,WAKE,gBAAKU,IAAKN,EAAYO,IAAK,SAAUC,MAAO,MAC5C,4BACE,eAAGb,UAAWC,EAAAA,MAAd,UACGG,EAAQ,EADX,KACgBD,EAAMW,UAEtB,oCAAYX,EAAMY,aAAaC,QAAQ,aAXpCb,EAAMK,GAgBlB,KAGN,C,oHClCD,EAAsB,oBAAtB,EAAgD,oBAAhD,EAA4E,sBAA5E,EAAyG,qB,4CCuDzG,EAhDe,WACb,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAmB,mCAAG,WAAMC,GAAN,0EACZ,OAAVA,EADsB,2EAKLC,EAAAA,EAAAA,IAAiBD,GALZ,OAKlBE,EALkB,OAMxBP,EAAUO,GACVC,QAAQC,IAAIF,GAPY,kDASxBC,QAAQC,IAAR,MATwB,0DAAH,sDAyBzB,OANAC,EAAAA,EAAAA,YAAU,WACR,IAAML,EAAQH,EAAaS,IAAI,SAC/BH,QAAQC,IAAIJ,GACZD,EAAoBC,EACrB,GAAE,CAACH,KAGF,4BACE,kBAAMU,OAAO,GAAGC,SAdM,SAAAC,GACxBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASC,KAAKC,MAC5CjB,EAAgB,CAAEE,MAAOW,GAC1B,EAUgDlC,UAAWC,EAAxD,WACE,kBACEsC,KAAK,OACLF,KAAK,OACLG,YAAY,kBACZxC,UAAWC,KAEb,oBAAQsC,KAAK,SAASvC,UAAWC,EAAjC,UACG,KACD,SAAC,MAAD,CAAUD,UAAWC,WAGzB,SAACwC,EAAA,EAAD,CAAW5C,OAAQA,MAGxB,C,+LCpDD6C,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,cACzBE,EADyB,yBAExBA,EAASpB,MAFe,2CAAH,qDAKjBqB,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCJ,IADhC,cACvBE,EADuB,yBAEtBA,EAASpB,MAFa,2CAAH,sDAKfuB,EAAY,mCAAG,WAAMD,GAAN,uFACHL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,IAFZ,cACpBE,EADoB,yBAInBA,EAASpB,KAAKwB,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeJ,IAFT,cACvBE,EADuB,OAI7BnB,QAAQC,IAAIkB,GAJiB,kBAKtBA,EAASpB,KAAK0B,SALQ,2CAAH,sDAQf3B,EAAgB,mCAAG,WAAMD,GAAN,uFACPmB,EAAAA,EAAAA,IAAA,6BACCU,mBAAmB7B,GADpB,oBACsCoB,IAF/B,cACxBE,EADwB,OAI9BnB,QAAQC,IAAIkB,GAJkB,kBAKvBA,EAASpB,KAAK0B,SALS,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","servises/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieList_link__+cn-g\",\"title\":\"MovieList_title__QyMtJ\",\"list\":\"MovieList_list__yjDCC\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieList.module.css';\nimport { useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={s.list}>\n      {movies.map((movie, index) => {\n        const posterPath =\n          movie.poster_path !== null\n            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n            : '';\n        return (\n          <li key={movie.id} className={s.item}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={s.link}\n            >\n              <img src={posterPath} alt={'poster'} width={75} />\n              <div>\n                <p className={s.title}>\n                  {index + 1}. {movie.title}\n                </p>\n                <p>Rating: {movie.vote_average.toFixed(1)}</p>\n              </div>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"Movies_svg__YL5BI\",\"btn\":\"Movies_btn__TlfBQ\",\"input\":\"Movies_input__KrUqs\",\"form\":\"Movies_form__4ow+Z\"};","import { BiSearch } from 'react-icons/bi';\nimport s from './Movies.module.css';\nimport MovieList from 'components/MovieList/MovieList';\nimport { getSearchedMovie } from 'servises/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import { useEffect } from 'react';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const fetchSearchedMovies = async query => {\n    if (query === null) {\n      return;\n    }\n    try {\n      const data = await getSearchedMovie(query);\n      setMovies(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleMovieSubmit = e => {\n    e.preventDefault();\n    const input = e.currentTarget.elements.name.value;\n    setSearchParams({ query: input });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    console.log(query);\n    fetchSearchedMovies(query);\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form action=\"\" onSubmit={handleMovieSubmit} className={s.form}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Search movie...\"\n          className={s.input}\n        />\n        <button type=\"submit\" className={s.btn}>\n          {' '}\n          <BiSearch className={s.svg} />\n        </button>\n      </form>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '87c43400ca83c97437451ae2477008e7';\n\nexport const getTrendingMovies = async () => {\n  const responce = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const responce = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return responce.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return responce.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const responce = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log(responce);\n  return responce.data.results;\n};\n\nexport const getSearchedMovie = async query => {\n  const responce = await axios.get(\n    `search/movie?query=${encodeURIComponent(query)}&api_key=${API_KEY}`\n  );\n  console.log(responce);\n  return responce.data.results;\n};\n"],"names":["movies","location","useLocation","className","s","map","movie","index","posterPath","poster_path","to","id","state","from","src","alt","width","title","vote_average","toFixed","useState","setMovies","useSearchParams","searchParams","setSearchParams","fetchSearchedMovies","query","getSearchedMovie","data","console","log","useEffect","get","action","onSubmit","e","preventDefault","input","currentTarget","elements","name","value","type","placeholder","MovieList","axios","API_KEY","getTrendingMovies","responce","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","results","encodeURIComponent"],"sourceRoot":""}